import os
import scapy.all as scapy

os.system('ip netns del m1 > /dev/null')
os.system('ip netns del m2 > /dev/null')
os.system('ip netns del m3 > /dev/null')
os.system('ip netns del m4 > /dev/null')
os.system('ip netns del nat > /dev/null')
os.system('ip netns add m1 > /dev/null')
os.system('ip netns add m2 > /dev/null')
os.system('ip netns add m3 > /dev/null')
os.system('ip netns add m4 > /dev/null')
os.system('ip netns add nat > /dev/null')
os.system('echo 1 > /proc/sys/net/ipv4/ip_forward')

m1_1::DyscoVPort(ifname='m1-1', netns='/var/run/netns/m1', mac_addr='00:00:00:00:00:21', ip_addrs=['10.0.2.1/24'])
m2_0::DyscoVPort(ifname='m2-0', netns='/var/run/netns/m2', mac_addr='00:00:00:00:00:A2', ip_addrs=['10.0.10.2/24'])
m2_1::DyscoVPort(ifname='m2-1', netns='/var/run/netns/m2', mac_addr='00:00:00:00:00:32', ip_addrs=['10.0.3.2/24'])
m3_0::DyscoVPort(ifname='m3-0', netns='/var/run/netns/m3', mac_addr='00:00:00:00:00:A3', ip_addrs=['10.0.10.3/24'])
m3_1::DyscoVPort(ifname='m3-1', netns='/var/run/netns/m3', mac_addr='00:00:00:00:00:33', ip_addrs=['10.0.3.3/24'])	
m4_0::DyscoVPort(ifname='m4-0', netns='/var/run/netns/m4', mac_addr='00:00:00:00:00:31', ip_addrs=['10.0.3.1/24'])

nat_int::DyscoVPort(ifname='nat-int', netns='/var/run/netns/nat', mac_addr='00:00:00:00:00:22', ip_addrs=['10.0.2.2/24'])
nat_ext::DyscoVPort(ifname='nat-ext', netns='/var/run/netns/nat', mac_addr='00:00:00:00:00:A1', ip_addrs=['10.0.10.1/24'])

os.system('ip netns exec m1 ifconfig lo up > /dev/null')
os.system('ip netns exec m2 ifconfig lo up > /dev/null')
os.system('ip netns exec m3 ifconfig lo up > /dev/null')
os.system('ip netns exec m4 ifconfig lo up > /dev/null')
os.system('ip netns exec nat ifconfig lo up > /dev/null')

os.system('ip netns exec m1 route add default gw 10.0.2.2 > /dev/null')
os.system('ip netns exec m3 route add -net 10.0.10.0/24 gw 10.0.10.1 > /dev/null')
os.system('ip netns exec m3 route add default gw 10.0.3.1 > /dev/null')
os.system('ip netns exec m4 route add default gw 10.0.3.2 > /dev/null')
os.system('ip netns exec nat iptables -t nat -F > /dev/null')
os.system('ip netns exec nat iptables -t filter -F > /dev/null')
os.system('ip netns exec nat route add default gw 10.0.10.3 dev nat-ext > /dev/null')

os.system('ip netns exec nat iptables -t nat -A POSTROUTING -o nat-ext -j MASQUERADE > /dev/null')
os.system('ip netns exec nat iptables -t filter -A FORWARD -i nat-int -j ACCEPT > /dev/null')
dc::DyscoCenter()

l3_1::IPLookup()
l3_1.add(prefix='10.0.1.1', prefix_len=32, gate=0)
l3_1.add(prefix='10.0.1.2', prefix_len=32, gate=1)
l3_1.add(prefix='10.0.2.1', prefix_len=32, gate=2)
l3_1.add(prefix='10.0.2.2', prefix_len=32, gate=3)
l3_1.add(prefix='10.0.2.3', prefix_len=32, gate=4)
l3_1.add(prefix='10.0.3.1', prefix_len=32, gate=5)
l3_1.add(prefix='10.0.3.2', prefix_len=32, gate=6)
l3_1.add(prefix='10.0.3.3', prefix_len=32, gate=7)
l3_1.add(prefix='10.0.4.1', prefix_len=32, gate=8)
l3_1.add(prefix='10.0.4.2', prefix_len=32, gate=9)
l3_1.add(prefix='10.0.10.1', prefix_len=32, gate=10)
l3_1.add(prefix='10.0.10.2', prefix_len=32, gate=11)
l3_1.add(prefix='10.0.10.3', prefix_len=32, gate=12)

din2::DyscoAgentIn(dc=dc) -> DyscoPortOut(port=m1_1)
din3::DyscoAgentIn(dc=dc) -> DyscoPortOut(port=m2_0)
din5::DyscoAgentIn(dc=dc) -> DyscoPortOut(port=m4_0)
din6::DyscoAgentIn(dc=dc) -> DyscoPortOut(port=m2_1)
DyscoPortInc(port=m1_1) -> dout2::DyscoAgentOut(dc=dc)
DyscoPortInc(port=m2_0) -> dout3::DyscoAgentOut(dc=dc)
DyscoPortInc(port=m4_0) -> dout5::DyscoAgentOut(dc=dc)
DyscoPortInc(port=m2_1) -> dout6::DyscoAgentOut(dc=dc)

din2.setup()
din3.setup()
din5.setup()
din6.setup()
dout2.setup()
dout3.setup()
dout5.setup()
dout6.setup()


# Switch 1 (10.0.2.0/24)
l2_1::L2FWD()
l2_1.add(mac_addr='00:00:00:00:00:21', gate=0)
l2_1.add(mac_addr='00:00:00:00:00:22', gate=1)
dout2 -> l2_1
PortInc(port=nat_int) -> l2_1
l2_1:0 -> din2
l2_1:1 -> PortOut(port=nat_int)


# Switch 2 (10.0.10.0/24)
l2_2::L2FWD()
l2_2.add(mac_addr='00:00:00:00:00:A1', gate=0)
l2_2.add(mac_addr='00:00:00:00:00:A2', gate=1)
l2_2.add(mac_addr='00:00:00:00:00:A3', gate=2)
dout3 -> l2_2
PortInc(port=m3_0) -> l2_2
PortInc(port=nat_ext) -> l2_2
l2_2:0 -> PortOut(port=nat_ext)
l2_2:1 -> din3
l2_2:2 -> PortOut(port=m3_0)


# Switch 3 (10.0.3.0/24)
l2_3::L2FWD()
l2_3.add(mac_addr='00:00:00:00:00:31', gate=0)
l2_3.add(mac_addr='00:00:00:00:00:32', gate=1)
l2_3.add(mac_addr='00:00:00:00:00:33', gate=2)
dout5 -> l2_3
dout6 -> l2_3
PortInc(port=m3_1)
l2_3:0 -> din5
l2_3:1 -> din6
l2_3:2 -> PortOut(port=m3_1)


# Router (global)
#din2:1 -> l3_1
din2:1 -> UpdateMac(mac_addr='00:00:00:00:00:22') -> l2_1
din3:1 -> l3_1
din5:1 -> l3_1
din6:1 -> l3_1
#dout2:1 -> l3_1 // -> Test, in m1 case, it's going to NAT directly
dout2:1 -> UpdateMac(mac_addr='00:00:00:00:00:22') -> l2_1
dout3:1 -> l3_1
dout5:1 -> l3_1
dout6:1 -> l3_1

l3_1:2 -> UpdateMac(mac_addr='00:00:00:00:00:21') -> l2_1
l3_1:3 -> UpdateMac(mac_addr='00:00:00:00:00:22') -> l2_1
l3_1:5 -> UpdateMac(mac_addr='00:00:00:00:00:31') -> l2_3
l3_1:6 -> UpdateMac(mac_addr='00:00:00:00:00:32') -> l2_3
l3_1:7 -> UpdateMac(mac_addr='00:00:00:00:00:33') -> l2_3
l3_1:10 -> UpdateMac(mac_addr='00:00:00:00:00:A1') -> l2_2
l3_1:11 -> UpdateMac(mac_addr='00:00:00:00:00:A2') -> l2_2
l3_1:12 -> UpdateMac(mac_addr='00:00:00:00:00:A3') -> l2_2









dc.add(priority=1, sc_len=2, chain=['10.0.10.2', '10.0.3.1'], filter='dst port 5001', ns='/var/run/netns/m1')
dc.add(priority=1, sc_len=1, chain=['10.0.3.1'], filter='dst port 5001', ns='/var/run/netns/m2')

os.system('ip netns exec m1 tcpdump -i m1-1 arp or icmp or tcp -n -XX -w /home/fabricio/m1_1.pcap & 2> /dev/null')
os.system('ip netns exec m2 tcpdump -i m2-0 arp or icmp or tcp -n -XX -w /home/fabricio/m2_0.pcap & 2> /dev/null')
os.system('ip netns exec m2 tcpdump -i m2-1 arp or icmp or tcp -n -XX -w /home/fabricio/m2_1.pcap & 2> /dev/null')
os.system('ip netns exec m3 tcpdump -i m3-0 arp or icmp or tcp -n -XX -w /home/fabricio/m3_0.pcap & 2> /dev/null')
os.system('ip netns exec m3 tcpdump -i m3-1 arp or icmp or tcp -n -XX -w /home/fabricio/m3_1.pcap & 2> /dev/null')
os.system('ip netns exec m4 tcpdump -i m4-0 arp or icmp or tcp -n -XX -w /home/fabricio/m4_0.pcap & 2> /dev/null')
os.system('ip netns exec nat tcpdump -i nat-int arp or icmp or tcp -n -XX -w /home/fabricio/nat_int.pcap & 2> /dev/null')
os.system('ip netns exec nat tcpdump -i nat-ext arp or icmp or tcp -n -XX -w /home/fabricio/nat_ext.pcap & 2> /dev/null')
